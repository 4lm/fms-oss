package de.berlinale.core.util.md5;

import java.io.FilterOutputStream;
import java.io.IOException;
import java.io.OutputStream;

public class MD5OutputStream extends FilterOutputStream {
	/**
	 * MD5 context
	 */
	private MD5 md5;

	/**
	 * Creates MD5OutputStream
	 * 
	 * @param out
	 *            The output stream
	 */

	public MD5OutputStream(OutputStream out) {
		super(out);

		md5 = new MD5();
	}

	/**
	 * Writes a byte.
	 * 
	 * @see java.io.FilterOutputStream
	 */

	@Override
	public void write(int b) throws IOException {
		out.write(b);
		md5.update((byte) b);
	}

	/**
	 * Writes a sub array of bytes.
	 * 
	 * @see java.io.FilterOutputStream
	 */

	@Override
	public void write(byte b[], int off, int len) throws IOException {
		out.write(b, off, len);
		md5.update(b, off, len);
	}

	/**
	 * Returns array of bytes representing hash of the stream as finalized for
	 * the current state.
	 * 
	 * @see MD5#Final
	 */

	public byte[] hash() {
		return md5.Final();
	}

	public MD5 getMD5() {
		return md5;
	}


}
